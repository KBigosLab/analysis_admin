
var db = require('analysis/db');
var passport = require('passport');
var GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;
var signature = require('cookie-signature');

exports.doLogin = function($P,userID,persist) {
  persist = persist || false;
  var sessionKey = $P.req.session.id;
  if (userID == 0) return false;

  var expires = new Date(Date.now()+3600*24*2*1000);
  if ($P.res.cookie('loggedIn', signature.sign(sessionKey,Const.cookieSecret), {expires: expires})) {
    $P.loggedIn = true;
    $P.userID = userID;
    var info = db.accounts.getUser(userID);
    $P.lastName = info.last;
    $P.preferredName = info.first;
    return true;
  } else {
    return false;
  }
}


exports.init = function(app) {

  // Google authentication
  passport.use(new GoogleStrategy({
    clientID: Const.googleClientID,
    clientSecret: Const.googleClientSecret,
    callbackURL: Const.server+'auth/google/callback',
  }, function(token, tokenSecret, profile, done) {
    done(null,{
      type: 'google',
      id:token,
      emails: profile.emails && profile.emails.length ? profile.emails : [],
      name: profile.name,
    });
  }));

  app.get('/auth/google', passport.authenticate('google',{scope: ['profile','email']}));
  app.get('/auth/google/callback',
  passport.authenticate('google', {
    successRedirect: '/auth_redirect',
    failureRedirect: '/auth_redirect'
  }));


  // User serialization
  passport.serializeUser(function(obj, done) {
    done(null, JSON.stringify(obj));
  });

  passport.deserializeUser(function(str, done) {
    done(null, JSON.parse(str));
  });

}

